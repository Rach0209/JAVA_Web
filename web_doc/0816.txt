

<!-- 
	Session의 유효 범위는?
	유효범위 그게뭔데씹덕아

접속한 웹 브라우저별로 정보를 관리하고싶을 때 세션 scope를 사용한다.
웹 브라우저 별로 관리하는 변수범위를 의미합니다.

session scope 웹브라우저 별로 관리하는 변수범위를 의미합니다.
쉽게 예를 든다면 같은 페이지를 보더라도 다른 아이디로 로그인했다면 브라우저 마다 각각
다른정보가 표현될 수 있습니다.(장바구니, 구매목록 등) 이를 관리해주기 위해서 서로다른 브라우저가 각각접속할때
각 브라우저에 따라서 관리를 하기위한 변수범위가 바로 session scope입니다.

웹 브라우저별로 변수를 관리하고자 할 경우 사용한다.
웹 브라우저간의 탭 간에는 세션정보가 공유되기 때문에, 각각의 탭에서는 같은 세션정보를 사용할 수 있다.
HttpSession 인터페이스를 구현한 객체를 사용한다.
JSP에서는 session 내장 변수를 사용한다.
서블릿에서는 HttpServletRequest의 getSession()메소드를 이용하여 session 객체를 얻는다.
값을 저장할 때는 session 객체의 setAttribute()메소드를 사용한다.
값을 읽어 들일 때는 session 객체의 getAttribute()메소드를 사용한다.
장바구니처럼 사용자별로 유지가 되어야 할 정보가 있을 때 사용한다.


pageContext - 하나의 JSP 파일 영역, 페이지 범위
request - 하나의 서비스 요청과 관련된 범위
session - 하나의 브라우저 범위(브라우저 닫지 않은 이상 유지, 브라우저 닫으면 로그아웃)
application - 사이트 전체에서 사용되는 범위(로그인/로그아웃 시 사용, 사이트에서 로그아웃 누를 때까지 유지

	
	jsessionid?
	 - 서블릿 컨테이너(tomcat)에 접속한 사용자를 구분하기 위해 부여한 값

	HttpSession 객체에 접근하기 위한 방법은?
	session객체를 getter로 가져올 수 있다. 기본 객체가 있기 때문이다.



	기존 Session이 '더 이상 유효하지 않음'을 위해 호출해야하는 HttpSession 메소드는?
	session.invalidate();



	쿠키(Cookie)와 세션(Session)을 관리하는 주체는?
	그게누군데 ???????????? 브라우저 ?
	관리는 서버가 한다. 서버(브라우저 ?)
클라이언트에서 정보 유지를 위해 쿠키와 세션을 사용

	---
	
	매핑되어 있는 주소에 HttpServlet의 요청 제어 전/후로  필터링 작업을 할 수 있는 객체는?
	doFilter라는 메소드를 쓰는데 그 안에 있는 FilterChain
	
	doFilter 메소드는 어떤 기능?
	서블릿에 접근하기 전에 먼저 미리 정보를 차단시켜서 제어해준다.	


	필터를 활용하면 좋은 점?
	서블릿을 불러오기전에 처리하기전에 쓸 수 있으니까
	어쨌든 정보보안상 좋고
	인코딩을 한 번에 할 수 있따.

	---
	
	Connection Pool이 뭔가요?
	연결 당겨오기............................................주길까
	DB를 사용하기 위해 DB와 애플리케이션 간 통신을 할 수 있는 수단
	DB Connection은 Database Driver와 Database 연결 정보를 담은 URL이 필요함
	Java의 DB Connection은 JDBC를 주로 이용하는데, URL 타입을 사용함


웹 컨테이너(WAS)가 실행되면서 일정량의 Connection 객체를 미리 만들어서 pool에 저장했다가,
클라이언트 요청이 오면 Connection 객체를 빌려주고
해당 객체의 임무가 완료되면 다시 Connection 객체를 반납 받아서
pool에 저장하는 프로그래밍 기법이다.

Container 구동 시 일정 수의 Connection 객체를 생성하게 되며
클라이언트의 요청에 의해 애플리케이션이 DBMS 작업을 수행해야 하면,
Connection Pool에서 Connection 객체를 받아와 작업을 진행한다.

이후 작업이 끝나면 Connetion Pool에 Connection 객체를 반납한다.




-->